Changeset created on Wed Apr 14 10:15:22 CEST 2010 by Seek You Too

Description: Add custom regular expressions to extract years

    Some projects require some custom year extractions, these 
    extractions can now be easily added using addRegex(..)

Baseline version: meresco-normalize/workingsets/3.0-beta/version_0

diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/meresconormalize/date/yearnormalize.py version_1/meresconormalize/date/yearnormalize.py
--- version_0/meresconormalize/date/yearnormalize.py	2010-04-14 10:14:03.000000000 +0200
+++ version_1/meresconormalize/date/yearnormalize.py	2010-04-14 10:15:06.000000000 +0200
@@ -36,14 +36,6 @@
             compile(r'^(\d{4})-\d{2}-\d{2}$'), #2008-01-01
         ]
 
-    def _normalize(self, aString, yearRe):
-        try:
-            match = yearRe.match(aString)
-            if match and self._yearBottom <= int(match.group(1)) <= self._yearTop:
-                return match.group(1)
-        except TypeError:
-            return None
-
     def normalize(self, aString):
         for yearRe in self._yearRes:
             result = self._normalize(aString, yearRe)
@@ -53,3 +45,15 @@
 
     def unparsable(self, aString):
         return self.normalize(aString) == None and aString or None
+
+    def addRegex(self, aRegexString):
+        self._yearRes.append(compile(aRegexString))
+
+    def _normalize(self, aString, yearRe):
+        try:
+            match = yearRe.match(aString)
+            if match and self._yearBottom <= int(match.group(1)) <= self._yearTop:
+                return match.group(1)
+        except TypeError:
+            return None
+
diff --unidirectional-new-file --exclude=.svn --exclude='*.pyc' --exclude=applied --recursive --unified version_0/test/yearnormalizetest.py version_1/test/yearnormalizetest.py
--- version_0/test/yearnormalizetest.py	2010-04-14 10:14:03.000000000 +0200
+++ version_1/test/yearnormalizetest.py	2010-04-14 10:15:06.000000000 +0200
@@ -65,3 +65,10 @@
     def testYearLessThanThousand(self):
         self.normalize = YearNormalize(yearRange=(0,2100))
         self.assertNormalize('0008', '0008')
+
+    def testAddRegex(self):
+        self.assertUnparsable('[2008]')
+        aRegexString = r'^\[(\d{4})\]$'
+        self.normalize.addRegex(aRegexString)
+
+        self.assertNormalize('2008', '[2008]')
